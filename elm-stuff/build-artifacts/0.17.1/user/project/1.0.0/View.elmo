var _user$project$View$renderKey = F2(
	function (model, emoji) {
		return A2(
			_elm_lang$html$Html$div,
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html_Attributes$class('col s2 m1 emoji-size')
				]),
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_elm_lang$html$Html$div,
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html_Attributes$classList(
							_elm_lang$core$Native_List.fromArray(
								[
									{ctor: '_Tuple2', _0: 'key-selector', _1: true},
									{
									ctor: '_Tuple2',
									_0: 'is-selected',
									_1: _elm_lang$core$Native_Utils.eq(emoji, model.selectedKey)
								}
								])),
							_elm_lang$html$Html_Events$onClick(
							_user$project$Update$SetSelectedKey(emoji))
						]),
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html$text(emoji)
						]))
				]));
	});
var _user$project$View$renderKeys = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('row')
			]),
		A2(
			_elm_lang$core$List$map,
			function (emoji) {
				return A2(_user$project$View$renderKey, model, emoji);
			},
			_user$project$EmojiConverter$supportedEmojis));
};
var _user$project$View$translateText = function (model) {
	var _p0 = model.direction;
	if (_p0.ctor === 'TextToEmoji') {
		return A2(_user$project$EmojiConverter$textToEmoji, model.selectedKey, model.currentText);
	} else {
		return A2(_user$project$EmojiConverter$emojiToText, model.selectedKey, model.currentText);
	}
};
var _user$project$View$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A3(
				_elm_lang$html$Html$node,
				'link',
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$rel('stylesheet'),
						_elm_lang$html$Html_Attributes$href('stylesheets/main.css')
					]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$nav,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('nav-wrapper light-blue lighten-2')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$html$Html$div,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$class('brand-logo center')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('Elmoji Cryptography Cypher')
									]))
							]))
					])),
				A2(
				_elm_lang$html$Html$section,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('container')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('input-field')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$html$Html$input,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$type$('text'),
										_elm_lang$html$Html_Attributes$class('center'),
										_elm_lang$html$Html_Attributes$placeholder('Let\'s Translate!'),
										_elm_lang$html$Html_Events$onInput(_user$project$Update$SetCurrentText)
									]),
								_elm_lang$core$Native_List.fromArray(
									[]))
							])),
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('switch center')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$html$Html$label,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('Translate Text'),
										A2(
										_elm_lang$html$Html$input,
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html_Attributes$type$('checkbox'),
												_elm_lang$html$Html_Events$onClick(_user$project$Update$ToggleDirection)
											]),
										_elm_lang$core$Native_List.fromArray(
											[])),
										A2(
										_elm_lang$html$Html$span,
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html_Attributes$class('lever')
											]),
										_elm_lang$core$Native_List.fromArray(
											[])),
										_elm_lang$html$Html$text('Translate Emoji')
									]))
							])),
						A2(
						_elm_lang$html$Html$p,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('center output-text emoji-size')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text(
								_user$project$View$translateText(model))
							]))
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('divider')
					]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$section,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('container')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$h4,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('center')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('Select Your Key')
							])),
						_user$project$View$renderKeys(model)
					]))
			]));
};
